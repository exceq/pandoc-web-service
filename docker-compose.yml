version: "3.9"
services:
  web:
    hostname: $APP_HOSTNAME
    build:
      context: web
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_started
    env_file:
      - ".env"
    volumes:
      - "./web/app/static:/app/app/samples/static" # временно, чтобы можно было менять html без перезапуска докера

  file-generator:
    build:
      context: file-generator
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - "./file-generator/out:/app/out"
    env_file:
      - ".env"

  nginx:
    hostname: $APP_HOSTNAME
    build: nginx/.
    depends_on:
      web:
        condition: service_started
    ports:
      - "8080:80"
    env_file:
      - ".env"

  storage:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio124
    command: server /export --console-address ":9001"
    volumes:
      - ./minio/data:/export
      - ./minio/config:/root/.minio

  db:
    image: postgres:14.5
    restart: always
    ports:
      - "15432:5432"
    env_file:
      - ".env"
    volumes:
      - "./db/init.sql:/docker-entrypoint-initdb.d/init.sql"
      - "./db/pgdata:/var/lib/postgresql/data"

  rabbitmq:
    hostname: $RABBIT_HOSTNAME
    image: rabbitmq:management
    ports:
      - "15672:15672"
    env_file:
      - ".env"
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

  redis:
    hostname: $CACHE_HOST
    image: redis
    env_file:
      - ".env"

#volumes:
#  pgdata: